-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    email character varying(100)[] NOT NULL,
    password character varying(30)[] NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.candidates
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    first_name character varying(50) NOT NULL,
    last_name character varying(50) NOT NULL,
    identity_number character(11) NOT NULL,
    birth_year character(4) NOT NULL,
    PRIMARY KEY (identity_number)
);

CREATE TABLE IF NOT EXISTS public.employers
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    company_name character varying(100) NOT NULL,
    web_adress character varying(100) NOT NULL,
    phone_number character varying(12) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employees
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    first_name character varying(50) NOT NULL,
    last_name character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.verification_codes
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    code character(6) NOT NULL,
    is_verified boolean NOT NULL,
    verified_date date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employers_verifications
(
    code_id integer NOT NULL,
    employer_id integer NOT NULL,
    PRIMARY KEY (code_id)
);

CREATE TABLE IF NOT EXISTS public.employee_confirms
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    employee_id integer NOT NULL,
    is_confirmed boolean NOT NULL,
    confirm_date date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.employee_confirm_employers
(
    employee_confirm_id integer NOT NULL,
    employer_id integer NOT NULL,
    PRIMARY KEY (employee_confirm_id)
);

CREATE TABLE IF NOT EXISTS public.job_titles
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY,
    title character varying(30) NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.candidates
    ADD FOREIGN KEY (id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employers
    ADD FOREIGN KEY (id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees
    ADD FOREIGN KEY (id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employers_verifications
    ADD FOREIGN KEY (code_id)
    REFERENCES public.verification_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employers_verifications
    ADD FOREIGN KEY (employer_id)
    REFERENCES public.employers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employee_confirms
    ADD FOREIGN KEY (employee_id)
    REFERENCES public.employees (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employee_confirm_employers
    ADD FOREIGN KEY (employee_confirm_id)
    REFERENCES public.employee_confirms (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employee_confirm_employers
    ADD FOREIGN KEY (employer_id)
    REFERENCES public.employers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;